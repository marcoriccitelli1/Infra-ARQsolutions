data "aws_caller_identity" "current" {}

resource "aws_s3_bucket" "logs_bucket" {
  bucket = var.s3_bucket

  tags = {
    Name = "${var.trail_name}-logs"
  }
}

resource "aws_s3_bucket_policy" "cloudtrail_policy" {
  bucket = aws_s3_bucket.logs_bucket.id

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Sid       = "AWSCloudTrailAclCheck",
        Effect    = "Allow",
        Principal = {
          Service = "cloudtrail.amazonaws.com"
        },
        Action   = "s3:GetBucketAcl",
        Resource = "arn:aws:s3:::${aws_s3_bucket.logs_bucket.id}"
      },
      {
        Sid       = "AWSCloudTrailWrite",
        Effect    = "Allow",
        Principal = {
          Service = "cloudtrail.amazonaws.com"
        },
        Action   = "s3:PutObject",
        Resource = "arn:aws:s3:::${aws_s3_bucket.logs_bucket.id}/AWSLogs/${data.aws_caller_identity.current.account_id}/*",
        Condition = {
          StringEquals = {
            "s3:x-amz-acl" = "bucket-owner-full-control"
          }
        }
      }
    ]
  })
}

resource "aws_cloudtrail" "trail" {
  name                          = var.trail_name
  is_multi_region_trail         = var.multi_region
  enable_log_file_validation    = var.log_file_validation
  include_global_service_events = var.global_events
  s3_bucket_name                = aws_s3_bucket.logs_bucket.id
}

resource "aws_iam_role" "config_role" {
  name = var.config_role_name

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect = "Allow",
        Principal = {
          Service = "config.amazonaws.com"
        },
        Action = "sts:AssumeRole"
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "config_attach" {
  role       = aws_iam_role.config_role.name
  policy_arn = var.config_policy_arn
}

resource "aws_config_configuration_recorder" "recorder" {
  name     = var.config_recorder_name
  role_arn = aws_iam_role.config_role.arn

  recording_group {
    all_supported = var.config_all_supported
  }
}

resource "aws_config_delivery_channel" "channel" {
  name           = var.config_channel_name
  s3_bucket_name = aws_s3_bucket.logs_bucket.id
}
